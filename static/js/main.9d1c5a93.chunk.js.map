{"version":3,"sources":["Letter.jsx","Text.jsx","Hangman.jsx","EndPart.jsx","game.jsx","index.js"],"names":["Letter","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","letter","String","fromCharCode","props","react","className","onClick","name","React","Text","classinfo","text","Hangman","src","img","alt","EndPart","react_default","a","createElement","win","Component","Game","_this","call","handleLetter","i","lettersgood","state","lettersbad","includes","toLowerCase","hash","length","toUpperCase","substr","push","setState","mistake","handleButton","number","Math","floor","random","tab","hashname","Array","fill","PostData","map","postDetail","Text_Text","_this2","x","_loop","Letter_Letter","_this3","info","EndPart_EndPart","imgs","Hangman_Hangman","renderStatus","renderLetters","renderEnd","renderHMan","ReactDOM","render","game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.9d1c5a93.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport class Letter extends React.Component\r\n{\r\n    render(){\r\n        let letter = String.fromCharCode(this.props.value);\r\n        return(\r\n            <div className={this.props.className}\r\n            onClick={this.props.onClick} name={this.props.value}>{letter}</div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport class Text extends React.Component\r\n{\r\n    render(){\r\n        return(\r\n            <div className={this.props.classinfo}>{this.props.text}</div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nexport class Hangman extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='hangman'>\r\n            <img src={this.props.img} alt='img' className='images'></img>\r\n            </div>\r\n    )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class EndPart extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className='endpart'>\r\n            <div className={this.props.classinfo}>{this.props.win}</div>\r\n            <button className='btnend' onClick={this.props.onClick}>Chcesz zagrac jeszcze raz? :></button>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport { Letter } from './Letter';\r\nimport { Text } from './Text';\r\nimport { Hangman } from './Hangman';\r\nimport { EndPart } from './EndPart';\r\nimport PostData from './List.json'\r\n\r\n\r\nexport class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mistake: 0,\r\n            text: null,\r\n            hash: null,\r\n            win: false,\r\n            tab: null,\r\n            lettersgood: Array(35).fill(null),\r\n            lettersbad: Array(35).fill(null)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tab = PostData.map((postDetail) => {\r\n            return postDetail.text;\r\n        }\r\n        )\r\n        let random = Math.floor(Math.random() * (tab.length));\r\n        let hash = this.hashname(tab[random]);\r\n        this.setState({ text: tab[random], hash: hash, tab: tab })\r\n    }\r\n\r\n    hashname(text) {\r\n        let hash = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (text[i] === ' ') { hash = hash + ' '; }\r\n            else hash = hash + \"-\";\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    renderStatus() {\r\n        if (this.state.mistake !== 9)\r\n            return (\r\n                <Text classinfo={'textstatus'} text={this.state.hash} />\r\n            )\r\n        return (\r\n            <>\r\n                <div className=\"text\">Poprawne haslo</div>\r\n                <Text classinfo='textlose' text={this.state.text} />\r\n            </>\r\n        )\r\n    }\r\n\r\n    renderLetters() {\r\n        if (this.state.mistake >= 9 || this.state.win === true) return null;\r\n        let a = [];\r\n        let x = null;\r\n        let className=null;\r\n        for (let i = 65; i < 90; i++) {\r\n            if(this.state.lettersgood.includes(i)) className='lettergreen'\r\n            else if(this.state.lettersbad.includes(i)) className='letterred'\r\n            else className='letter'\r\n                x = <Letter key={i} className={className} value={i} onClick={() => this.handleLetter(i)} />;\r\n            a.push(x);\r\n        }\r\n\r\n        return (\r\n            <div className='checktext'>\r\n                {a}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleLetter = (i) => {\r\n        let lettersgood = this.state.lettersgood;\r\n        let lettersbad = this.state.lettersbad;\r\n        if (!lettersgood.includes(i) && !lettersbad.includes(i)) {\r\n            const text = this.state.text.toLowerCase();\r\n            let hash = this.state.hash;\r\n            let letter = String.fromCharCode(i).toLowerCase();\r\n            if (text.includes(letter)) {\r\n                for (let i = 0; i < text.length; i++) {\r\n                    if (i === 1) letter = letter.toLowerCase();\r\n                    if (text[i] === letter) {\r\n                        if (i === 0) letter = letter.toUpperCase();\r\n                        hash = hash.substr(0, i) + letter + hash.substr(i + 1);\r\n                    }\r\n                }\r\n                let win = false;\r\n                if (hash === this.state.text) { win = true; }\r\n                lettersgood.push(i);\r\n                this.setState({ hash: hash, win: win, lettersgood: lettersgood })\r\n            } else {\r\n                lettersbad.push(i);\r\n                this.setState({ mistake: this.state.mistake + 1, lettersbad: lettersbad })\r\n            }\r\n        }\r\n    }\r\n\r\n    renderEnd() {\r\n        let win = \"Gratulacje! Udalo Ci sie odgadnac haslo!\";\r\n        let lose = \"Zginales. Beznadzieja\";\r\n        if (this.state.win === false) {\r\n            if (this.state.mistake !== 9) return null;\r\n        }\r\n        let info = this.state.win ? win : lose;\r\n        let classinfo = this.state.win ? \"endpartwin\" : \"endpartlose\";\r\n        return (\r\n            <EndPart win={info} classinfo={classinfo} onClick={() => this.handleButton()} />\r\n        )\r\n    }\r\n    //reset!!!\r\n    handleButton = () => {\r\n        let number = Math.floor(Math.random() * (this.state.tab.length))\r\n        let hash = this.hashname(this.state.tab[number]);\r\n        this.setState({\r\n            mistake: 0,\r\n            hash: hash,\r\n            text: this.state.tab[number],\r\n            win: false,\r\n            lettersgood: Array(35).fill(null),\r\n            lettersbad: Array(35).fill(null)\r\n        })\r\n    }\r\n\r\n    renderHMan() {\r\n        let imgs = '../images/s' + this.state.mistake + '.jpg';\r\n        return (\r\n            <Hangman img={imgs} />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='game'>\r\n                {this.renderStatus()}\r\n                {this.renderLetters()}\r\n                {this.renderEnd()}\r\n                {this.renderHMan()}\r\n            </div>\r\n        )\r\n    }\r\n}","import './index.css'\r\nimport * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Game} from './game'\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}